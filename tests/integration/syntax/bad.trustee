
; this should be full of errors, but we need to be able to "mostly" parse it.

; start with a good statement, as a litmus test
(decl foo1 type)

; unknown command
(yoloswag x y $ z $)

(def t1 [] something $ foo) $) ; bad )
(def t2 [] something $ \ x y: z $) ; no `.`

(decl a too many args) ; bad arity

(goal $foo$ { bla bla bla ] oh no })  ; unexpected `]`

(decl foo2 type) ; this must work, with error recovery

(goal $foo$ { bla bla bla ])  ; wrong closing

(decl foo3 type) ; this should ideally work, with error recovery
