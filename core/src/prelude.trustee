; vim:ft=trustee:

; ### The HOL prelude for Trustee.

(defconst
  "T" "def_true"
  `let f = (\x: bool. x) in f=f`)

; `|- T`
(defthm "true_is_true"
  (bool_eq
    (refl `\x: bool. x`)
    (sym def_true)))

; prove `(x=T) = x`
(defthm "eq_true_elim"
  (bool_eq_intro
    (bool_eq true_is_true (sym (assume `with x:bool. x=T`)))
    (bool_eq_intro true_is_true (assume `with x:bool. x`))))

;eq_true_elim

; prove `(x=T) = x`
(defthm "eq_true_elim"
  (bool_eq_intro
    (bool_eq true_is_true (sym (assume `with x:bool. x=T`)))
    (bool_eq_intro true_is_true (assume `with x:bool. x`))))

; `x = (x=T)`
(defthm "eq_true_intro" (sym eq_true_elim))

(defconst "forall" "def_forall"
 `\(a:type) (f:a -> bool). f = (\x:a. T)`)

(set_binder "forall" 20)

(defconst "/\" "def_and"
  `\a b: bool. forall (f:bool->bool->bool). (f a b = f T T)`)
(set_infix "/\" 60 59)

; # END OF FILE
; # avoid double include
(decl "hol_prelude_loaded" `bool`)
